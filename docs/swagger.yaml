definitions:
  DisplayItem:
    properties:
      abyssJewel:
        type: boolean
      additionalProperties:
        items:
          $ref: '#/definitions/ItemProperty'
        type: array
      baseType:
        type: string
      colour:
        type: string
      corrupted:
        type: boolean
      cosmeticMods:
        items:
          type: string
        type: array
      craftedMods:
        items:
          type: string
        type: array
      delve:
        type: boolean
      duplicated:
        type: boolean
      elder:
        type: boolean
      enchantMods:
        items:
          type: string
        type: array
      explicitMods:
        items:
          type: string
        type: array
      extended:
        $ref: '#/definitions/ItemExtended'
      foilVariation:
        type: integer
      foreseeing:
        type: boolean
      fractured:
        type: boolean
      fracturedMods:
        items:
          type: string
        type: array
      frameType:
        type: integer
      gemSockets:
        items:
          $ref: '#/definitions/GemSocket'
        type: array
      grantedSkills:
        description: PoE2 only
        items:
          $ref: '#/definitions/ItemProperty'
        type: array
      h:
        type: integer
      hybrid:
        $ref: '#/definitions/ItemHybrid'
      icon:
        type: string
      id:
        type: string
      identified:
        type: boolean
      ilvl:
        type: integer
      implicitMods:
        items:
          type: string
        type: array
      incubatedItem:
        $ref: '#/definitions/ItemIncubatedItem'
      influences:
        additionalProperties:
          type: boolean
        type: object
      inventoryId:
        type: string
      isRelic:
        type: boolean
      itemLevel:
        type: integer
      logbookMods:
        items:
          $ref: '#/definitions/ItemLogbookMod'
        type: array
      memoryItem:
        type: boolean
      name:
        type: string
      notableProperties:
        items:
          $ref: '#/definitions/ItemProperty'
        type: array
      objectiveId:
        description: field added by our backend
        type: integer
      properties:
        items:
          $ref: '#/definitions/ItemProperty'
        type: array
      rarity:
        type: string
      rewards:
        items:
          $ref: '#/definitions/ItemReward'
        type: array
      ruthless:
        type: boolean
      scourgeMods:
        items:
          type: string
        type: array
      searing:
        type: boolean
      shaper:
        type: boolean
      socket:
        type: integer
      socketedItems:
        items:
          $ref: '#/definitions/DisplayItem'
        type: array
      sockets:
        items:
          $ref: '#/definitions/ItemSocket'
        type: array
      split:
        type: boolean
      stackSize:
        type: integer
      support:
        type: boolean
      supportGemRequirements:
        description: PoE2 only
        items:
          $ref: '#/definitions/ItemProperty'
        type: array
      synthesised:
        type: boolean
      talismanTier:
        type: integer
      tangled:
        type: boolean
      typeLine:
        type: string
      ultimatumMods:
        items:
          $ref: '#/definitions/ItemUltimatumMod'
        type: array
      unmodifiable:
        type: boolean
      utilityMods:
        items:
          type: string
        type: array
      veiled:
        type: boolean
      veiledMods:
        items:
          type: string
        type: array
      w:
        type: integer
      weaponRequirements:
        description: PoE2 only
        items:
          $ref: '#/definitions/ItemProperty'
        type: array
      x:
        type: integer
      "y":
        type: integer
    type: object
  GemSocket:
    enum:
    - W
    type: string
    x-enum-varnames:
    - W
  GuildStashTabGGG:
    properties:
      children:
        items:
          $ref: '#/definitions/GuildStashTabGGG'
        type: array
      id:
        type: string
      index:
        type: integer
      items:
        items:
          $ref: '#/definitions/DisplayItem'
        type: array
      metadata:
        $ref: '#/definitions/StashTabMetadata'
      name:
        type: string
      parent:
        type: string
      type:
        type: string
    type: object
  Item:
    properties:
      abyssJewel:
        type: boolean
      additionalProperties:
        items:
          $ref: '#/definitions/ItemProperty'
        type: array
      baseType:
        type: string
      colour:
        type: string
      corrupted:
        type: boolean
      cosmeticMods:
        items:
          type: string
        type: array
      craftedMods:
        items:
          type: string
        type: array
      delve:
        type: boolean
      duplicated:
        type: boolean
      elder:
        type: boolean
      enchantMods:
        items:
          type: string
        type: array
      explicitMods:
        items:
          type: string
        type: array
      extended:
        $ref: '#/definitions/ItemExtended'
      foilVariation:
        type: integer
      foreseeing:
        type: boolean
      fractured:
        type: boolean
      fracturedMods:
        items:
          type: string
        type: array
      frameType:
        type: integer
      gemSockets:
        items:
          $ref: '#/definitions/GemSocket'
        type: array
      grantedSkills:
        description: PoE2 only
        items:
          $ref: '#/definitions/ItemProperty'
        type: array
      hybrid:
        $ref: '#/definitions/ItemHybrid'
      id:
        type: string
      identified:
        type: boolean
      ilvl:
        type: integer
      implicitMods:
        items:
          type: string
        type: array
      incubatedItem:
        $ref: '#/definitions/ItemIncubatedItem'
      influences:
        additionalProperties:
          type: boolean
        type: object
      inventoryId:
        type: string
      isRelic:
        type: boolean
      itemLevel:
        type: integer
      logbookMods:
        items:
          $ref: '#/definitions/ItemLogbookMod'
        type: array
      memoryItem:
        type: boolean
      name:
        type: string
      notableProperties:
        items:
          $ref: '#/definitions/ItemProperty'
        type: array
      properties:
        items:
          $ref: '#/definitions/ItemProperty'
        type: array
      rarity:
        type: string
      rewards:
        items:
          $ref: '#/definitions/ItemReward'
        type: array
      ruthless:
        type: boolean
      scourgeMods:
        items:
          type: string
        type: array
      searing:
        type: boolean
      shaper:
        type: boolean
      socket:
        type: integer
      socketedItems:
        items:
          $ref: '#/definitions/Item'
        type: array
      sockets:
        items:
          $ref: '#/definitions/ItemSocket'
        type: array
      split:
        type: boolean
      stackSize:
        type: integer
      support:
        type: boolean
      supportGemRequirements:
        description: PoE2 only
        items:
          $ref: '#/definitions/ItemProperty'
        type: array
      synthesised:
        type: boolean
      talismanTier:
        type: integer
      tangled:
        type: boolean
      typeLine:
        type: string
      ultimatumMods:
        items:
          $ref: '#/definitions/ItemUltimatumMod'
        type: array
      unmodifiable:
        type: boolean
      utilityMods:
        items:
          type: string
        type: array
      veiled:
        type: boolean
      veiledMods:
        items:
          type: string
        type: array
      weaponRequirements:
        description: PoE2 only
        items:
          $ref: '#/definitions/ItemProperty'
        type: array
      x:
        type: integer
      "y":
        type: integer
    type: object
  ItemExtended:
    properties:
      category:
        type: string
      prefixes:
        type: integer
      subcategories:
        items:
          type: string
        type: array
      suffixes:
        type: integer
    type: object
  ItemHybrid:
    properties:
      baseTypeName:
        type: string
      explicitMods:
        items:
          type: string
        type: array
      isVaalGem:
        type: boolean
      properties:
        items:
          $ref: '#/definitions/ItemProperty'
        type: array
      secDescrText:
        type: string
    type: object
  ItemIncubatedItem:
    properties:
      level:
        type: integer
      name:
        type: string
      progress:
        type: integer
      total:
        type: integer
    type: object
  ItemLogbookMod:
    properties:
      faction:
        $ref: '#/definitions/ItemLogbookModFaction'
      mods:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  ItemLogbookModFaction:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  ItemProperty:
    properties:
      displayMode:
        type: integer
      icon:
        description: PoE2 only
        type: string
      name:
        type: string
      progress:
        type: number
      suffix:
        type: string
      type:
        type: integer
      values:
        items:
          items: {}
          type: array
        type: array
    type: object
  ItemReward:
    properties:
      label:
        type: string
      rewards:
        additionalProperties:
          type: integer
        type: object
    type: object
  ItemSocket:
    properties:
      attr:
        type: string
      group:
        type: integer
      item:
        allOf:
        - $ref: '#/definitions/ItemSocketItem'
        description: PoE2 only
      sColour:
        type: string
      type:
        allOf:
        - $ref: '#/definitions/ItemSocketType'
        description: PoE2 only
    type: object
  ItemSocketItem:
    enum:
    - emerald
    - sapphire
    - ruby
    - rune
    - soulcore
    - activegem
    - supportgem
    type: string
    x-enum-varnames:
    - ItemSocketItemEmerald
    - ItemSocketItemSapphire
    - ItemSocketItemRuby
    - ItemSocketItemRune
    - ItemSocketItemSoulcore
    - ItemSocketItemActiveGem
    - ItemSocketItemSupportGem
  ItemSocketType:
    enum:
    - gem
    - jewel
    - rune
    type: string
    x-enum-varnames:
    - ItemSocketTypeGem
    - ItemSocketTypeJewel
    - ItemSocketTypeRune
  ItemUltimatumMod:
    properties:
      tier:
        type: integer
      type:
        type: string
    type: object
  StashTab:
    properties:
      children:
        items:
          $ref: '#/definitions/StashTab'
        type: array
      id:
        type: string
      index:
        type: integer
      items:
        items:
          $ref: '#/definitions/Item'
        type: array
      metadata:
        $ref: '#/definitions/StashTabMetadata'
      name:
        type: string
      parent:
        type: string
      type:
        type: string
    type: object
  StashTabMetadata:
    properties:
      colour:
        type: string
      folder:
        type: boolean
      items:
        type: integer
      layout: {}
      public:
        type: boolean
    type: object
  TwitchStream:
    properties:
      backend_user_id:
        type: integer
      game_id:
        type: string
      game_name:
        type: string
      id:
        type: string
      is_mature:
        type: boolean
      language:
        type: string
      started_at:
        type: string
      tag_ids:
        items:
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
      thumbnail_url:
        type: string
      title:
        type: string
      type:
        type: string
      user_id:
        type: string
      user_login:
        type: string
      user_name:
        type: string
      viewer_count:
        type: integer
    type: object
  Atlas:
    properties:
      event_id:
        type: integer
      index:
        type: integer
      trees:
        items:
          items:
            type: integer
          type: array
        type: array
      user_id:
        type: integer
    required:
    - event_id
    - index
    - trees
    - user_id
    type: object
  CallbackBody:
    properties:
      code:
        type: string
      redirect_url:
        type: string
      state:
        type: string
    required:
    - code
    - redirect_url
    - state
    type: object
  CallbackResponse:
    properties:
      auth_token:
        type: string
      last_path:
        type: string
      user:
        $ref: '#/definitions/User'
    required:
    - auth_token
    - last_path
    - user
    type: object
  Character:
    properties:
      ascendancy:
        type: string
      ascendancy_points:
        type: integer
      atlas_node_count:
        type: integer
      event_id:
        type: integer
      id:
        type: string
      level:
        type: integer
      main_skill:
        type: string
      name:
        type: string
      pantheon:
        type: boolean
      user_id:
        type: integer
    required:
    - ascendancy
    - ascendancy_points
    - atlas_node_count
    - event_id
    - id
    - level
    - main_skill
    - name
    - pantheon
    type: object
  CharacterStat:
    properties:
      armour:
        type: integer
      dps:
        type: integer
      ehp:
        type: integer
      ele_max_hit:
        type: integer
      es:
        type: integer
      evasion:
        type: integer
      hp:
        type: integer
      mana:
        type: integer
      movement_speed:
        type: integer
      phys_max_hit:
        type: integer
      timestamp:
        type: integer
      xp:
        type: integer
    required:
    - armour
    - dps
    - ehp
    - ele_max_hit
    - es
    - evasion
    - hp
    - mana
    - movement_speed
    - phys_max_hit
    - timestamp
    - xp
    type: object
  Condition:
    properties:
      field:
        $ref: '#/definitions/ItemField'
      id:
        type: integer
      operator:
        $ref: '#/definitions/Operator'
      value:
        type: string
    required:
    - field
    - id
    - operator
    - value
    type: object
  ConditionCreate:
    properties:
      field:
        $ref: '#/definitions/ItemField'
      id:
        type: integer
      objective_id:
        type: integer
      operator:
        $ref: '#/definitions/Operator'
      value:
        type: string
    required:
    - field
    - objective_id
    - operator
    - value
    type: object
  ConditionMappings:
    properties:
      field_to_type:
        additionalProperties:
          $ref: '#/definitions/FieldType'
        type: object
      objective_type_to_number_fields:
        additionalProperties:
          items:
            $ref: '#/definitions/NumberField'
          type: array
        type: object
      valid_operators:
        additionalProperties:
          items:
            $ref: '#/definitions/Operator'
          type: array
        type: object
    required:
    - field_to_type
    - objective_type_to_number_fields
    - valid_operators
    type: object
  Event:
    properties:
      application_end_time:
        type: string
      application_start_time:
        type: string
      event_end_time:
        type: string
      event_start_time:
        type: string
      game_version:
        $ref: '#/definitions/GameVersion'
      id:
        type: integer
      is_current:
        type: boolean
      is_locked:
        type: boolean
      is_public:
        type: boolean
      max_size:
        type: integer
      name:
        type: string
      teams:
        items:
          $ref: '#/definitions/Team'
        type: array
      waitlist_size:
        type: integer
    required:
    - application_end_time
    - application_start_time
    - event_end_time
    - event_start_time
    - game_version
    - id
    - is_current
    - is_locked
    - is_public
    - max_size
    - name
    - teams
    - waitlist_size
    type: object
  EventCreate:
    properties:
      application_end_time:
        type: string
      application_start_time:
        type: string
      event_end_time:
        type: string
      event_start_time:
        type: string
      game_version:
        $ref: '#/definitions/GameVersion'
      id:
        type: integer
      is_current:
        type: boolean
      is_locked:
        type: boolean
      is_public:
        type: boolean
      max_size:
        type: integer
      name:
        type: string
      waitlist_size:
        type: integer
    required:
    - application_end_time
    - application_start_time
    - event_end_time
    - event_start_time
    - game_version
    - max_size
    - name
    - waitlist_size
    type: object
  GuildStashTab:
    properties:
      color:
        type: string
      fetch_enabled:
        type: boolean
      id:
        type: string
      index:
        type: integer
      last_fetch:
        type: string
      name:
        type: string
      parent_id:
        type: string
      type:
        type: string
      user_ids:
        items:
          type: integer
        type: array
    required:
    - fetch_enabled
    - id
    - last_fetch
    - name
    - type
    - user_ids
    type: object
  JobCreate:
    properties:
      duration_in_seconds:
        type: integer
      end_date:
        type: string
      event_id:
        type: integer
      job_type:
        $ref: '#/definitions/JobType'
      sleep_after_each_run_seconds:
        type: integer
    type: object
  LadderEntry:
    properties:
      account_name:
        type: string
      character:
        $ref: '#/definitions/Character'
      character_class:
        type: string
      character_name:
        type: string
      delve:
        type: integer
      experience:
        type: integer
      level:
        type: integer
      rank:
        type: integer
      stats:
        $ref: '#/definitions/CharacterStat'
      twitch_account:
        type: string
      user_id:
        type: integer
    required:
    - account_name
    - character_class
    - character_name
    - delve
    - experience
    - level
    - rank
    type: object
  MinimalUser:
    properties:
      display_name:
        type: string
      id:
        type: integer
    required:
    - display_name
    - id
    type: object
  NonSensitiveUser:
    properties:
      account_name:
        type: string
      discord_id:
        type: string
      discord_name:
        type: string
      display_name:
        type: string
      id:
        type: integer
      twitch_id:
        type: string
      twitch_name:
        type: string
    required:
    - display_name
    - id
    type: object
  Objective:
    properties:
      aggregation:
        $ref: '#/definitions/AggregationType'
      children:
        items:
          $ref: '#/definitions/Objective'
        type: array
      conditions:
        items:
          $ref: '#/definitions/Condition'
        type: array
      extra:
        type: string
      id:
        type: integer
      name:
        type: string
      number_field:
        $ref: '#/definitions/NumberField'
      objective_type:
        $ref: '#/definitions/ObjectiveType'
      parent_id:
        type: integer
      required_number:
        type: integer
      scoring_preset:
        $ref: '#/definitions/ScoringPreset'
      scoring_preset_id:
        type: integer
      valid_from:
        type: string
      valid_to:
        type: string
    required:
    - aggregation
    - children
    - conditions
    - extra
    - id
    - name
    - number_field
    - objective_type
    - parent_id
    - required_number
    type: object
  ObjectiveConditionCreate:
    properties:
      field:
        allOf:
        - $ref: '#/definitions/ItemField'
        enum:
        - BASE_TYPE
        - NAME
        - TYPE_LINE
        - RARITY
        - ILVL
        - FRAME_TYPE
        - TALISMAN_TIER
        - ENCHANT_MODS
        - EXPLICIT_MODS
        - IMPLICIT_MODS
        - CRAFTED_MODS
        - FRACTURED_MODS
        - SIX_LINK
      id:
        type: integer
      operator:
        allOf:
        - $ref: '#/definitions/Operator'
        enum:
        - EQ
        - NEQ
        - GT
        - GTE
        - LT
        - LTE
        - IN
        - NOT_IN
        - MATCHES
        - CONTAINS
        - CONTAINS_ALL
        - CONTAINS_MATCH
        - CONTAINS_ALL_MATCHES
      value:
        type: string
    required:
    - field
    - operator
    - value
    type: object
  ObjectiveCreate:
    properties:
      aggregation:
        $ref: '#/definitions/AggregationType'
      conditions:
        items:
          $ref: '#/definitions/ObjectiveConditionCreate'
        type: array
      extra:
        type: string
      id:
        type: integer
      name:
        type: string
      number_field:
        $ref: '#/definitions/NumberField'
      objective_type:
        $ref: '#/definitions/ObjectiveType'
      parent_id:
        type: integer
      required_number:
        type: integer
      scoring_preset_id:
        type: integer
      valid_from:
        type: string
      valid_to:
        type: string
    required:
    - aggregation
    - conditions
    - name
    - number_field
    - objective_type
    - parent_id
    - required_number
    type: object
  PoB:
    properties:
      ascendancy:
        type: string
      export_string:
        type: string
      level:
        type: integer
      main_skill:
        type: string
      timestamp:
        type: string
    required:
    - ascendancy
    - export_string
    - level
    - main_skill
    - timestamp
    type: object
  ReportPlaytimeRequest:
    properties:
      actual_playtime:
        type: integer
    required:
    - actual_playtime
    type: object
  Score:
    properties:
      finished:
        type: boolean
      number:
        type: integer
      points:
        type: integer
      rank:
        type: integer
      timestamp:
        type: string
      user_id:
        type: integer
    required:
    - finished
    - number
    - points
    - rank
    - timestamp
    - user_id
    type: object
  ScoreDiff:
    properties:
      diff_type:
        $ref: '#/definitions/Difftype'
      field_diff:
        items:
          type: string
        type: array
      objective_id:
        type: integer
      score:
        $ref: '#/definitions/Score'
      team_id:
        type: integer
    required:
    - diff_type
    - field_diff
    - objective_id
    - score
    - team_id
    type: object
  ScoringPreset:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      point_cap:
        type: integer
      points:
        items:
          type: number
        type: array
      scoring_method:
        $ref: '#/definitions/ScoringMethod'
      type:
        $ref: '#/definitions/ScoringPresetType'
    required:
    - description
    - id
    - name
    - points
    - scoring_method
    - type
    type: object
  ScoringPresetCreate:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      point_cap:
        type: integer
      points:
        items:
          type: number
        type: array
      scoring_method:
        $ref: '#/definitions/ScoringMethod'
      type:
        $ref: '#/definitions/ScoringPresetType'
    required:
    - name
    - points
    - scoring_method
    - type
    type: object
  Signup:
    properties:
      actual_playtime:
        type: integer
      expected_playtime:
        type: integer
      needs_help:
        type: boolean
      partner:
        $ref: '#/definitions/NonSensitiveUser'
      partner_id:
        type: integer
      team_id:
        type: integer
      team_lead:
        type: boolean
      timestamp:
        type: string
      user:
        $ref: '#/definitions/NonSensitiveUser'
      wants_to_help:
        type: boolean
    required:
    - actual_playtime
    - expected_playtime
    - team_lead
    - timestamp
    - user
    type: object
  SignupCreate:
    properties:
      expected_playtime:
        type: integer
      needs_help:
        type: boolean
      partner_account_name:
        type: string
      wants_to_help:
        type: boolean
    required:
    - expected_playtime
    type: object
  Submission:
    properties:
      approval_status:
        $ref: '#/definitions/ApprovalStatus'
      comment:
        type: string
      id:
        type: integer
      number:
        type: integer
      objective_id:
        type: integer
      proof:
        type: string
      review_comment:
        type: string
      reviewer_id:
        type: integer
      team_id:
        type: integer
      timestamp:
        type: string
      user_id:
        type: integer
    required:
    - approval_status
    - comment
    - id
    - number
    - objective_id
    - proof
    - timestamp
    - user_id
    type: object
  SubmissionCreate:
    properties:
      comment:
        type: string
      id:
        type: integer
      number:
        type: integer
      objective_id:
        type: integer
      proof:
        type: string
      timestamp:
        type: string
    required:
    - objective_id
    - timestamp
    type: object
  SubmissionReview:
    properties:
      approval_status:
        allOf:
        - $ref: '#/definitions/ApprovalStatus'
        enum:
        - APPROVED
        - PENDING
        - REJECTED
      review_comment:
        type: string
    required:
    - approval_status
    type: object
  Team:
    properties:
      allowed_classes:
        items:
          type: string
        type: array
      color:
        type: string
      event_id:
        type: integer
      id:
        type: integer
      name:
        type: string
    required:
    - allowed_classes
    - event_id
    - id
    - name
    type: object
  TeamCreate:
    properties:
      allowed_classes:
        items:
          type: string
        type: array
      color:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - allowed_classes
    - name
    type: object
  TeamSubmissionCreate:
    properties:
      objective_id:
        type: integer
      team_ids:
        items:
          type: integer
        type: array
    required:
    - objective_id
    - team_ids
    type: object
  TeamUserCreate:
    properties:
      is_team_lead:
        type: boolean
      team_id:
        type: integer
      user_id:
        type: integer
    required:
    - user_id
    type: object
  User:
    properties:
      account_name:
        type: string
      discord_id:
        type: string
      discord_name:
        type: string
      display_name:
        type: string
      id:
        type: integer
      permissions:
        items:
          $ref: '#/definitions/Permission'
        type: array
      token_expiry_timestamp:
        type: string
      twitch_id:
        type: string
      twitch_name:
        type: string
    required:
    - display_name
    - id
    - permissions
    type: object
  UserUpdate:
    properties:
      display_name:
        type: string
    required:
    - display_name
    type: object
  RecurringJob:
    properties:
      end_date:
        type: string
      event_id:
        type: integer
      job_type:
        $ref: '#/definitions/JobType'
      sleep_after_each_run_seconds:
        type: integer
    required:
    - end_date
    - event_id
    - job_type
    - sleep_after_each_run_seconds
    type: object
  AggregationType:
    enum:
    - SUM_LATEST
    - EARLIEST
    - EARLIEST_FRESH_ITEM
    - MAXIMUM
    - MINIMUM
    - DIFFERENCE_BETWEEN
    - NONE
    type: string
    x-enum-varnames:
    - AggregationTypeSumLatest
    - AggregationTypeEarliest
    - AggregationTypeEarliestFreshItem
    - AggregationTypeMaximum
    - AggregationTypeMinimum
    - AggregationTypeDifferenceBetween
    - AggregationTypeNone
  ApprovalStatus:
    enum:
    - APPROVED
    - REJECTED
    - PENDING
    type: string
    x-enum-varnames:
    - APPROVED
    - REJECTED
    - PENDING
  FieldType:
    enum:
    - string
    - int
    - bool
    - string[]
    type: string
    x-enum-varnames:
    - String
    - Int
    - Bool
    - StringArray
  GameVersion:
    enum:
    - poe1
    - poe2
    type: string
    x-enum-varnames:
    - PoE1
    - PoE2
  ItemField:
    enum:
    - BASE_TYPE
    - NAME
    - ITEM_CLASS
    - TYPE_LINE
    - QUALITY
    - LEVEL
    - RARITY
    - ILVL
    - FRAME_TYPE
    - TALISMAN_TIER
    - MAP_TIER
    - ENCHANT_MODS
    - EXPLICIT_MODS
    - IMPLICIT_MODS
    - CRAFTED_MODS
    - FRACTURED_MODS
    - INFLUENCES
    - MAX_LINKS
    - SOCKETS
    - INCUBATOR_KILLS
    - IS_CORRUPTED
    - IS_VAAL
    - IS_SPLIT
    - IS_IDENTIFIED
    - SANCTUM_AFFLICTIONS
    - TEMPLE_ROOMS
    - RITUAL_VESSEL_BOSSES
    - RITUAL_VESSEL_MAP
    - FACETOR_LENS_EXP
    - MEMORY_STRANDS
    type: string
    x-enum-comments:
      SOCKETS: as string like "RGGB"
    x-enum-varnames:
    - BASE_TYPE
    - NAME
    - ITEM_CLASS
    - TYPE_LINE
    - QUALITY
    - LEVEL
    - RARITY
    - ILVL
    - FRAME_TYPE
    - TALISMAN_TIER
    - MAP_TIER
    - ENCHANTS
    - EXPLICITS
    - IMPLICITS
    - CRAFTED_MODS
    - FRACTURED_MODS
    - INFLUENCES
    - MAX_LINKS
    - SOCKETS
    - INCUBATOR_KILLS
    - IS_CORRUPTED
    - IS_VAAL
    - IS_SPLIT
    - IS_IDENTIFIED
    - SANCTUM_MODS
    - TEMPLE_ROOMS
    - RITUAL_BOSSES
    - RITUAL_MAP
    - FACETOR_LENS_EXP
    - MEMORY_STRANDS
  JobType:
    enum:
    - FetchStashChanges
    - EvaluateStashChanges
    - FetchCharacterData
    - FetchGuildStashes
    - DetermineGuildStashAccess
    type: string
    x-enum-varnames:
    - FetchStashChanges
    - EvaluateStashChanges
    - FetchCharacterData
    - FetchGuildStashes
    - DetermineGuildStashAccess
  NumberField:
    enum:
    - STACK_SIZE
    - PLAYER_LEVEL
    - DELVE_DEPTH
    - DELVE_DEPTH_PAST_100
    - PANTHEON
    - ASCENDANCY
    - PLAYER_SCORE
    - SUBMISSION_VALUE
    - FINISHED_OBJECTIVES
    type: string
    x-enum-varnames:
    - NumberFieldStackSize
    - NumberFieldPlayerLevel
    - NumberFieldDelveDepth
    - NumberFieldDelveDepthPast100
    - NumberFieldPantheon
    - NumberFieldAscendancy
    - NumberFieldPlayerScore
    - NumberFieldSubmissionValue
    - NumberFieldFinishedObjectives
  ObjectiveType:
    enum:
    - ITEM
    - PLAYER
    - TEAM
    - SUBMISSION
    - CATEGORY
    type: string
    x-enum-varnames:
    - ObjectiveTypeItem
    - ObjectiveTypePlayer
    - ObjectiveTypeTeam
    - ObjectiveTypeSubmission
    - ObjectiveTypeCategory
  Operator:
    enum:
    - EQ
    - NEQ
    - GT
    - LT
    - IN
    - NOT_IN
    - MATCHES
    - CONTAINS
    - CONTAINS_ALL
    - CONTAINS_MATCH
    - LENGTH_EQ
    - LENGTH_GT
    - LENGTH_LT
    - DOES_NOT_MATCH
    type: string
    x-enum-varnames:
    - EQ
    - NEQ
    - GT
    - LT
    - IN
    - NOT_IN
    - MATCHES
    - CONTAINS
    - CONTAINS_ALL
    - CONTAINS_MATCH
    - LENGTH_EQ
    - LENGTH_GT
    - LENGTH_LT
    - DOES_NOT_MATCH
  Permission:
    enum:
    - admin
    - manager
    - objective_designer
    - submission_judge
    type: string
    x-enum-varnames:
    - PermissionAdmin
    - PermissionManager
    - PermissionObjectiveDesigner
    - PermissionSubmissionJudge
  ScoringMethod:
    enum:
    - PRESENCE
    - POINTS_FROM_VALUE
    - RANKED_TIME
    - RANKED_VALUE
    - RANKED_REVERSE
    - RANKED_COMPLETION_TIME
    - BONUS_PER_COMPLETION
    type: string
    x-enum-varnames:
    - PRESENCE
    - POINTS_FROM_VALUE
    - RANKED_TIME
    - RANKED_VALUE
    - RANKED_REVERSE
    - RANKED_COMPLETION
    - BONUS_PER_COMPLETION
  ScoringPresetType:
    enum:
    - OBJECTIVE
    - CATEGORY
    type: string
    x-enum-varnames:
    - OBJECTIVE
    - CATEGORY
  ApplicationStatus:
    enum:
    - applied
    - accepted
    - waitlisted
    - none
    type: string
    x-enum-varnames:
    - ApplicationStatusApplied
    - ApplicationStatusAccepted
    - ApplicationStatusWaitlisted
    - ApplicationStatusNone
  Difftype:
    enum:
    - Added
    - Removed
    - Changed
    - Unchanged
    type: string
    x-enum-varnames:
    - Added
    - Removed
    - Changed
    - Unchanged
  EventStatus:
    properties:
      application_status:
        $ref: '#/definitions/ApplicationStatus'
      is_team_lead:
        type: boolean
      number_of_signups:
        type: integer
      partner:
        type: string
      team_id:
        type: integer
    required:
    - application_status
    - is_team_lead
    - number_of_signups
    type: object
info:
  contact:
    email: Liberatorist@gmail.com
    name: Liberator
  description: This is the backend API for the BPL project.
  title: BPL Backend API
  version: "2.0"
paths:
  /{eventId}/guild-stash:
    get:
      description: Fetches all guild stash tabs for a user
      operationId: GetGuildStashForUser
      parameters:
      - description: Event Id
        in: path
        name: eventId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/GuildStashTab'
            type: array
      security:
      - BearerAuth: []
      tags:
      - guild-stash
  /{eventId}/guild-stash/{stash_id}:
    get:
      description: Fetches a specific guild stash tab
      operationId: GetGuildStashTab
      parameters:
      - description: Event Id
        in: path
        name: eventId
        required: true
        type: integer
      - description: Stash Tab Id
        in: path
        name: stash_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GuildStashTabGGG'
      security:
      - BearerAuth: []
      tags:
      - guild-stash
    patch:
      description: Enables fetching for a specific guild stash tab
      operationId: SwitchStashFetching
      parameters:
      - description: Event Id
        in: path
        name: eventId
        required: true
        type: integer
      - description: Stash Tab Id
        in: path
        name: stash_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GuildStashTab'
      security:
      - BearerAuth: []
      tags:
      - guild-stash
  /{eventId}/guild-stash/{stash_id}/update:
    post:
      description: Fetches current items for specific guild stash tab
      operationId: UpdateStashTab
      parameters:
      - description: Event Id
        in: path
        name: eventId
        required: true
        type: integer
      - description: Stash Tab Id
        in: path
        name: stash_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      tags:
      - guild-stash
  /{eventId}/guild-stash/update-access:
    post:
      description: Parses all user access for guild stash tabs
      operationId: UpdateAccess
      parameters:
      - description: Event Id
        in: path
        name: eventId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      tags:
      - guild-stash
  /events:
    get:
      description: Fetches all events
      operationId: GetEvents
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Event'
            type: array
      security:
      - BearerAuth: []
      tags:
      - event
    put:
      consumes:
      - application/json
      description: Creates or updates an event
      operationId: CreateEvent
      parameters:
      - description: Event to create
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/EventCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Event'
      security:
      - BearerAuth: []
      tags:
      - event
  /events/{event_id}:
    delete:
      description: Deletes an event
      operationId: DeleteEvent
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      tags:
      - event
    get:
      description: Fetches an event by id
      operationId: GetEvent
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Event'
      security:
      - BearerAuth: []
      tags:
      - event
  /events/{event_id}/atlas:
    get:
      consumes:
      - application/json
      description: Get atlas trees for your team for an event
      operationId: GetTeamAtlasesForEvent
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Atlas'
            type: array
      security:
      - BearerAuth: []
      tags:
      - atlas
  /events/{event_id}/characters:
    get:
      consumes:
      - application/json
      description: Get all characters for an event
      operationId: GetCharactersForEvent
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Character'
            type: array
      tags:
      - characters
  /events/{event_id}/conditions:
    put:
      consumes:
      - application/json
      description: Creates a condition
      operationId: CreateCondition
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Condition to create
        in: body
        name: condition
        required: true
        schema:
          $ref: '#/definitions/ConditionCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Condition'
      security:
      - BearerAuth: []
      tags:
      - condition
  /events/{event_id}/conditions/{id}:
    delete:
      description: Deletes a condition
      operationId: DeleteCondition
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Condition Id
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      security:
      - BearerAuth: []
      tags:
      - condition
  /events/{event_id}/conditions/valid-mappings:
    get:
      description: Get valid mappings for conditions
      operationId: GetValidMappings
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ConditionMappings'
      security:
      - BearerAuth: []
      tags:
      - condition
  /events/{event_id}/duplicate:
    post:
      consumes:
      - application/json
      description: Duplicates an event's configuration
      operationId: DuplicateEvent
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Event to create
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/EventCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Event'
      security:
      - BearerAuth: []
      tags:
      - event
  /events/{event_id}/ladder:
    get:
      consumes:
      - application/json
      description: Get the ladder for an event
      operationId: GetLadder
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/LadderEntry'
            type: array
      tags:
      - ladder
  /events/{event_id}/objectives:
    get:
      description: Gets all objectives for an event
      operationId: GetObjectiveTreeForEvent
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Objective'
      tags:
      - objective
    put:
      consumes:
      - application/json
      description: Creates a new objective
      operationId: CreateObjective
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Objective to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ObjectiveCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Objective'
      security:
      - BearerAuth: []
      tags:
      - objective
  /events/{event_id}/objectives/{id}:
    delete:
      description: Deletes an objective
      operationId: DeleteObjective
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Objective Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      tags:
      - objective
    get:
      description: Gets an objective by id
      operationId: GetObjective
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Objective Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Objective'
      security:
      - BearerAuth: []
      tags:
      - objective
  /events/{event_id}/scores/latest:
    get:
      description: Fetches the latest scores for the current event
      operationId: GetLatestScoresForEvent
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ScoreDiff'
            type: array
      tags:
      - scores
  /events/{event_id}/scores/simple/ws:
    get:
      description: Websocket for simple score updates.
      operationId: SimpleScoreWebSocket
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: integer
            type: object
      security:
      - BearerAuth: []
      tags:
      - scores
  /events/{event_id}/scores/ws:
    get:
      description: Websocket for score updates. Once connected, the client will receive
        score updates in real-time.
      operationId: ScoreWebSocket
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ScoreDiff'
      security:
      - BearerAuth: []
      tags:
      - scores
  /events/{event_id}/scoring-presets:
    get:
      description: Fetches the scoring presets for the current event
      operationId: GetScoringPresetsForEvent
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ScoringPreset'
            type: array
      tags:
      - scoring
    put:
      consumes:
      - application/json
      description: Creates a new scoring preset
      operationId: CreateScoringPreset
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Preset to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ScoringPresetCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ScoringPreset'
      security:
      - BearerAuth: []
      tags:
      - scoring
  /events/{event_id}/scoring-presets/{id}:
    delete:
      description: Deletes a scoring preset by id
      operationId: DeleteScoringPreset
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Preset Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      tags:
      - scoring
  /events/{event_id}/signups:
    get:
      description: Fetches all signups for the event
      operationId: GetEventSignups
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Signup'
            type: array
      security:
      - BearerAuth: []
      tags:
      - signup
  /events/{event_id}/signups/self:
    delete:
      description: Deletes the authenticated user's signup for the event
      operationId: DeleteSignup
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      tags:
      - signup
    get:
      description: Fetches an authenticated user's signup for the event
      operationId: GetPersonalSignup
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Signup'
      security:
      - BearerAuth: []
      tags:
      - signup
    put:
      consumes:
      - application/json
      description: Creates a signup for the authenticated user
      operationId: CreateSignup
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Signup
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SignupCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Signup'
      security:
      - BearerAuth: []
      tags:
      - signup
  /events/{event_id}/signups/self/actual-playtime:
    put:
      consumes:
      - application/json
      description: Reports the actual playtime for the authenticated user
      operationId: ReportPlaytime
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Actual Playtime
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ReportPlaytimeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Signup'
      security:
      - BearerAuth: []
      tags:
      - signup
  /events/{event_id}/status:
    get:
      consumes:
      - application/json
      description: Gets the status for an event including the user's application status
      operationId: GetEventStatus
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventStatus'
      security:
      - BearerAuth: []
      tags:
      - event
  /events/{event_id}/submissions:
    get:
      description: Fetches all submissions for an event
      operationId: GetSubmissions
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Submission'
            type: array
      tags:
      - submission
    put:
      consumes:
      - application/json
      description: Submits a bounty for an event
      operationId: SubmitBounty
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Submission to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SubmissionCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Submission'
      security:
      - BearerAuth: []
      tags:
      - submission
  /events/{event_id}/submissions/{submission_id}:
    delete:
      description: Deletes a submission
      operationId: DeleteSubmission
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Submission Id
        in: path
        name: submission_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      tags:
      - submission
  /events/{event_id}/submissions/{submission_id}/review:
    put:
      consumes:
      - application/json
      description: Reviews a submission
      operationId: ReviewSubmission
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Submission Id
        in: path
        name: submission_id
        required: true
        type: integer
      - description: Submission review
        in: body
        name: submission
        required: true
        schema:
          $ref: '#/definitions/SubmissionReview'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Submission'
      security:
      - BearerAuth: []
      tags:
      - submission
  /events/{event_id}/submissions/admin:
    put:
      consumes:
      - application/json
      description: Sets submissions for teams
      operationId: SetBulkSubmissionForAdmin
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Submissions to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TeamSubmissionCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/Submission'
            type: array
      security:
      - BearerAuth: []
      tags:
      - submission
  /events/{event_id}/suggestions:
    get:
      description: Fetches all suggestions for your team for an event
      operationId: GetTeamSuggestions
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: integer
            type: array
      security:
      - BearerAuth: []
      tags:
      - team
  /events/{event_id}/suggestions/{objective_id}:
    delete:
      description: Deletes a suggestion for an objective for your team for an event
      operationId: DeleteObjectiveTeamSuggestion
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Objective Id
        in: path
        name: objective_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      tags:
      - team
    post:
      consumes:
      - application/json
      description: Creates a suggestion for an objective for your team for an event
      operationId: CreateObjectiveTeamSuggestion
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Objective Id
        in: path
        name: objective_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
      security:
      - BearerAuth: []
      tags:
      - team
  /events/{event_id}/teams:
    get:
      description: Fetches all teams for an event
      operationId: GetTeams
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Team'
            type: array
      tags:
      - team
    put:
      consumes:
      - application/json
      description: Creates a team for an event
      operationId: CreateTeam
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Team to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TeamCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Team'
      security:
      - BearerAuth: []
      tags:
      - team
  /events/{event_id}/teams/{team_id}:
    delete:
      description: Deletes a team
      operationId: DeleteTeam
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Team Id
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      tags:
      - team
    get:
      description: Fetches a team by id
      operationId: GetTeam
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Team Id
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
      tags:
      - team
  /events/{event_id}/teams/users:
    put:
      consumes:
      - application/json
      description: Adds users to teams
      operationId: AddUsersToTeams
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      - description: Users to add to teams
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/TeamUserCreate'
          type: array
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      tags:
      - team
      - user
  /events/{event_id}/users:
    get:
      description: Fetches all users for an event
      operationId: GetUsersForEvent
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/MinimalUser'
              type: array
            type: object
      tags:
      - user
  /jobs:
    get:
      consumes:
      - application/json
      description: Get all recurring jobs
      operationId: GetJobs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/RecurringJob'
            type: array
      security:
      - BearerAuth: []
      tags:
      - jobs
    post:
      consumes:
      - application/json
      description: Start a recurring job
      operationId: StartJob
      parameters:
      - description: Job to create
        in: body
        name: job
        required: true
        schema:
          $ref: '#/definitions/JobCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/RecurringJob'
      security:
      - BearerAuth: []
      tags:
      - jobs
  /oauth2/{provider}/callback:
    post:
      consumes:
      - application/json
      description: Callback handler for oauth
      operationId: OauthCallback
      parameters:
      - description: Provider name
        enum:
        - poe
        - twitch
        - discord
        in: path
        name: provider
        required: true
        type: string
      - description: Callback body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CallbackBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CallbackResponse'
      tags:
      - oauth
  /oauth2/{provider}/redirect:
    get:
      description: Redirects to an oauth provider
      operationId: OauthRedirect
      parameters:
      - description: Provider name
        enum:
        - poe
        - twitch
        - discord
        in: path
        name: provider
        required: true
        type: string
      - description: Redirect URL for oauth provider
        in: query
        name: redirect_url
        type: string
      - description: Last URL to redirect to after oauth is finished
        in: query
        name: last_url
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - oauth
  /oauth2/discord/bot-login:
    post:
      consumes:
      - application/json
      description: Logs in the discord bot (only for internal use)
      operationId: LoginDiscordBot
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - oauth
  /streams:
    get:
      description: Fetches all twitch streams for the current event
      operationId: GetStreams
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/TwitchStream'
            type: array
      tags:
      - streams
  /users:
    get:
      description: Fetches all users
      operationId: GetAllUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
      security:
      - BearerAuth: []
      tags:
      - user
  /users/{user_id}:
    get:
      description: Fetches a user by ID
      operationId: GetUserById
      parameters:
      - description: User Id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Changes the permissions of a user
      operationId: ChangePermissions
      parameters:
      - description: User Id
        in: path
        name: user_id
        required: true
        type: integer
      - description: Permissions
        in: body
        name: permissions
        required: true
        schema:
          items:
            $ref: '#/definitions/Permission'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      security:
      - BearerAuth: []
      tags:
      - user
  /users/{user_id}/characters:
    get:
      description: Fetches all event characters for a user
      operationId: GetUserCharacters
      parameters:
      - description: User Id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Character'
            type: array
      tags:
      - characters
  /users/{user_id}/characters/{character_id}:
    get:
      consumes:
      - application/json
      description: Get all character data for an event for a user
      operationId: GetCharacterHistory
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Character ID
        in: path
        name: character_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/CharacterStat'
            type: array
      tags:
      - characters
  /users/{user_id}/characters/{character_id}/pobs:
    get:
      description: Get all PoB exports for a character
      operationId: GetPoBs
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Character ID
        in: path
        name: character_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/PoB'
            type: array
      tags:
      - characters
  /users/remove-auth:
    post:
      description: Removes an authentication provider from the authenticated user
      operationId: RemoveAuth
      parameters:
      - description: Provider
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      security:
      - BearerAuth: []
      tags:
      - user
  /users/self:
    get:
      description: Fetches the authenticated user
      operationId: GetUser
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      security:
      - BearerAuth: []
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Updates the authenticated users display name
      operationId: UpdateUser
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      security:
      - BearerAuth: []
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
