{
    "swagger": "2.0",
    "info": {
        "description": "This is the backend API for the BPL project.",
        "title": "BPL Backend API",
        "contact": {
            "name": "Liberator",
            "email": "Liberatorist@gmail.com"
        },
        "version": "2.0"
    },
    "paths": {
        "/events": {
            "get": {
                "description": "Fetches all events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "operationId": "GetEvents",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Creates or updates an event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "operationId": "CreateEvent",
                "parameters": [
                    {
                        "description": "Event to create",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                }
            }
        },
        "/events/current": {
            "get": {
                "description": "Fetches the current event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "operationId": "GetCurrentEvent",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                }
            }
        },
        "/events/{event_id}": {
            "get": {
                "description": "Gets an event by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "operationId": "GetEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an event",
                "tags": [
                    "event"
                ],
                "operationId": "DeleteEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/events/{event_id}/duplicate": {
            "post": {
                "description": "Duplicates an event's configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "operationId": "DuplicateEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event to create",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                }
            }
        },
        "/events/{event_id}/rules": {
            "get": {
                "description": "Fetches the rules for the current event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "operationId": "GetRulesForEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                }
            }
        },
        "/events/{event_id}/scores/latest": {
            "get": {
                "description": "Fetches the latest scores for the current event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scores"
                ],
                "operationId": "GetLatestScoresForEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScoreMap"
                        }
                    }
                }
            }
        },
        "/events/{event_id}/scores/ws": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Websocket for score updates. Once connected, the client will receive score updates in real-time.",
                "tags": [
                    "scores"
                ],
                "operationId": "ScoreWebSocket",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScoreDiff"
                        }
                    }
                }
            }
        },
        "/events/{event_id}/scoring-presets": {
            "get": {
                "description": "Fetches the scoring presets for the current event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "operationId": "GetScoringPresetsForEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScoringPreset"
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/signups": {
            "get": {
                "description": "Fetches all signups for the event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signup"
                ],
                "operationId": "GetEventSignups",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/Signup"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/signups/self": {
            "get": {
                "description": "Fetches an authenticated user's signup for the event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signup"
                ],
                "operationId": "GetPersonalSignup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Signup"
                        }
                    }
                }
            },
            "put": {
                "description": "Creates a signup for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signup"
                ],
                "operationId": "CreateSignup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Signup",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SignupCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Signup"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the authenticated user's signup for the event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signup"
                ],
                "operationId": "DeleteSignup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/events/{event_id}/status": {
            "get": {
                "description": "Gets the users application status for an event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "operationId": "GetEventStatusForUser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EventStatus"
                        }
                    }
                }
            }
        },
        "/events/{event_id}/submissions": {
            "get": {
                "description": "Fetches all submissions for an event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "operationId": "GetSubmissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Submission"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Submits a bounty for an event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "operationId": "SubmitBounty",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Submission to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubmissionCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Submission"
                        }
                    }
                }
            }
        },
        "/events/{event_id}/submissions/{submission_id}": {
            "delete": {
                "description": "Deletes a submission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "operationId": "DeleteSubmission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Submission Id",
                        "name": "submission_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/events/{event_id}/submissions/{submission_id}/review": {
            "put": {
                "description": "Reviews a submission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "operationId": "ReviewSubmission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Submission Id",
                        "name": "submission_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Submission review",
                        "name": "submission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubmissionReview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Submission"
                        }
                    }
                }
            }
        },
        "/events/{event_id}/teams": {
            "get": {
                "description": "Fetches all teams for an event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "operationId": "GetTeams",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Team"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Creates a team for an event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "operationId": "CreateTeam",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Team to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TeamCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Team"
                        }
                    }
                }
            }
        },
        "/events/{event_id}/teams/users": {
            "put": {
                "description": "Adds users to teams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team",
                    "user"
                ],
                "operationId": "AddUsersToTeams",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Users to add to teams",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TeamUserCreate"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/events/{event_id}/teams/{team_id}": {
            "get": {
                "description": "Fetches a team by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "operationId": "GetTeam",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Team Id",
                        "name": "team_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Team"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a team",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team"
                ],
                "operationId": "DeleteTeam",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Team Id",
                        "name": "team_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/events/{event_id}/users": {
            "get": {
                "description": "Fetches all users for an event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "GetUsersForEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/MinimalUser"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobs": {
            "get": {
                "description": "Get all recurring jobs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "operationId": "GetJobs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecurringJob"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Start a recurring job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "operationId": "StartJob",
                "parameters": [
                    {
                        "description": "Job to create",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/RecurringJob"
                        }
                    }
                }
            }
        },
        "/oauth2/discord": {
            "get": {
                "description": "Redirects to discord oauth",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "oauth"
                ],
                "responses": {
                    "302": {
                        "description": "Found"
                    }
                }
            }
        },
        "/oauth2/discord/bot-login": {
            "post": {
                "description": "Logs in the discord bot (only for internal use)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "oauth"
                ],
                "operationId": "LoginDiscordBot",
                "parameters": [
                    {
                        "description": "Discord bot login body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DiscordBotLoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/oauth2/discord/redirect": {
            "get": {
                "description": "Redirect handler for discord oauth",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "oauth"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/oauth2/twitch": {
            "get": {
                "description": "Redirects to twitch oauth",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "oauth"
                ],
                "responses": {
                    "302": {
                        "description": "Found"
                    }
                }
            }
        },
        "/oauth2/twitch/redirect": {
            "get": {
                "description": "Redirect handler for twitch oauth",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "oauth"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/scoring/categories": {
            "put": {
                "description": "Creates a new scoring category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "operationId": "CreateCategory",
                "parameters": [
                    {
                        "description": "Category to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CategoryCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                }
            }
        },
        "/scoring/categories/{id}": {
            "get": {
                "description": "Fetches a scoring category by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "operationId": "GetScoringCategory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a scoring category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "operationId": "DeleteCategory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/scoring/conditions": {
            "put": {
                "description": "Creates a condition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "condition"
                ],
                "operationId": "CreateCondition",
                "parameters": [
                    {
                        "description": "Condition to create",
                        "name": "condition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConditionCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Condition"
                        }
                    }
                }
            }
        },
        "/scoring/conditions/valid-mappings": {
            "get": {
                "description": "Get valid mappings for conditions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "condition"
                ],
                "operationId": "GetValidMappings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConditionMappings"
                        }
                    }
                }
            }
        },
        "/scoring/conditions/{id}": {
            "delete": {
                "description": "Deletes a condition",
                "tags": [
                    "condition"
                ],
                "operationId": "DeleteCondition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Condition Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/scoring/objectives": {
            "put": {
                "description": "Creates a new objective",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objective"
                ],
                "operationId": "CreateObjective",
                "parameters": [
                    {
                        "description": "Objective to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectiveCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Objective"
                        }
                    }
                }
            }
        },
        "/scoring/objectives/{id}": {
            "get": {
                "description": "Gets an objective by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objective"
                ],
                "operationId": "GetObjective",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Objective Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Objective"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an objective",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objective"
                ],
                "operationId": "DeleteObjective",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Objective Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/scoring/presets": {
            "put": {
                "description": "Creates a new scoring preset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "operationId": "CreateScoringPreset",
                "parameters": [
                    {
                        "description": "Preset to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScoringPresetCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScoringPreset"
                        }
                    }
                }
            }
        },
        "/scoring/presets/{id}": {
            "get": {
                "description": "Fetches a scoring preset by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "operationId": "GetScoringPreset",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Preset Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScoringPreset"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a scoring preset by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "operationId": "DeleteScoringPreset",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Preset Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/streams": {
            "get": {
                "description": "Fetches all twitch streams for the current event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "streams"
                ],
                "operationId": "GetStreams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TwitchStream"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "GetAllUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Logs out the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "Logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/remove-auth": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes an authentication provider from the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "RemoveAuth",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/self": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "GetUser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the authenticated users display name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "UpdateUser",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Changes the permissions of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "ChangePermissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permissions",
                        "name": "permissions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Permission"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "TwitchStream": {
            "type": "object",
            "properties": {
                "backend_user_id": {
                    "type": "integer"
                },
                "game_id": {
                    "type": "string"
                },
                "game_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_mature": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_login": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                },
                "viewer_count": {
                    "type": "integer"
                }
            }
        },
        "ApplicationStatus": {
            "type": "string",
            "enum": [
                "applied",
                "accepted",
                "waitlisted",
                "none"
            ],
            "x-enum-varnames": [
                "ApplicationStatusApplied",
                "ApplicationStatusAccepted",
                "ApplicationStatusWaitlisted",
                "ApplicationStatusNone"
            ]
        },
        "Category": {
            "type": "object",
            "required": [
                "id",
                "name",
                "objectives",
                "sub_categories"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "objectives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Objective"
                    }
                },
                "scoring_preset": {
                    "$ref": "#/definitions/ScoringPreset"
                },
                "scoring_preset_id": {
                    "type": "integer"
                },
                "sub_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Category"
                    }
                }
            }
        },
        "CategoryCreate": {
            "type": "object",
            "required": [
                "name",
                "parent_id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                },
                "scoring_preset_id": {
                    "type": "integer"
                }
            }
        },
        "Condition": {
            "type": "object",
            "required": [
                "field",
                "id",
                "operator",
                "value"
            ],
            "properties": {
                "field": {
                    "$ref": "#/definitions/ItemField"
                },
                "id": {
                    "type": "integer"
                },
                "operator": {
                    "$ref": "#/definitions/Operator"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ConditionCreate": {
            "type": "object",
            "required": [
                "field",
                "objective_id",
                "operator",
                "value"
            ],
            "properties": {
                "field": {
                    "enum": [
                        "BASE_TYPE",
                        "NAME",
                        "TYPE_LINE",
                        "RARITY",
                        "ILVL",
                        "FRAME_TYPE",
                        "TALISMAN_TIER",
                        "ENCHANT_MODS",
                        "EXPLICIT_MODS",
                        "IMPLICIT_MODS",
                        "CRAFTED_MODS",
                        "FRACTURED_MODS",
                        "SIX_LINK"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/ItemField"
                        }
                    ]
                },
                "id": {
                    "type": "integer"
                },
                "objective_id": {
                    "type": "integer"
                },
                "operator": {
                    "enum": [
                        "EQ",
                        "NEQ",
                        "GT",
                        "GTE",
                        "LT",
                        "LTE",
                        "IN",
                        "NOT_IN",
                        "MATCHES",
                        "CONTAINS",
                        "CONTAINS_ALL",
                        "CONTAINS_MATCH",
                        "CONTAINS_ALL_MATCHES"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/Operator"
                        }
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ConditionMappings": {
            "type": "object",
            "required": [
                "field_to_type",
                "objective_type_to_number_fields",
                "valid_operators"
            ],
            "properties": {
                "field_to_type": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/FieldType"
                    }
                },
                "objective_type_to_number_fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/NumberField"
                        }
                    }
                },
                "valid_operators": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Operator"
                        }
                    }
                }
            }
        },
        "DiscordBotLoginBody": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "Event": {
            "type": "object",
            "required": [
                "application_start_time",
                "event_end_time",
                "event_start_time",
                "game_version",
                "id",
                "is_current",
                "max_size",
                "name",
                "scoring_category_id",
                "teams"
            ],
            "properties": {
                "application_start_time": {
                    "type": "string"
                },
                "event_end_time": {
                    "type": "string"
                },
                "event_start_time": {
                    "type": "string"
                },
                "game_version": {
                    "$ref": "#/definitions/GameVersion"
                },
                "id": {
                    "type": "integer"
                },
                "is_current": {
                    "type": "boolean"
                },
                "max_size": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scoring_category_id": {
                    "type": "integer"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Team"
                    }
                }
            }
        },
        "EventCreate": {
            "type": "object",
            "required": [
                "application_start_time",
                "event_end_time",
                "event_start_time",
                "game_version",
                "max_size",
                "name"
            ],
            "properties": {
                "application_start_time": {
                    "type": "string"
                },
                "event_end_time": {
                    "type": "string"
                },
                "event_start_time": {
                    "type": "string"
                },
                "game_version": {
                    "$ref": "#/definitions/GameVersion"
                },
                "id": {
                    "type": "integer"
                },
                "is_current": {
                    "type": "boolean"
                },
                "max_size": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "EventStatus": {
            "type": "object",
            "required": [
                "application_status"
            ],
            "properties": {
                "application_status": {
                    "$ref": "#/definitions/ApplicationStatus"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "JobCreate": {
            "type": "object",
            "properties": {
                "duration_in_seconds": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "event_id": {
                    "type": "integer"
                },
                "job_type": {
                    "$ref": "#/definitions/JobType"
                },
                "sleep_after_each_run_seconds": {
                    "type": "integer"
                }
            }
        },
        "MinimalUser": {
            "type": "object",
            "required": [
                "display_name",
                "id"
            ],
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "NonSensitiveUser": {
            "type": "object",
            "required": [
                "display_name",
                "id"
            ],
            "properties": {
                "account_name": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "discord_name": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "twitch_id": {
                    "type": "string"
                },
                "twitch_name": {
                    "type": "string"
                }
            }
        },
        "Objective": {
            "type": "object",
            "required": [
                "aggregation",
                "category_id",
                "conditions",
                "extra",
                "id",
                "name",
                "number_field",
                "objective_type",
                "required_number"
            ],
            "properties": {
                "aggregation": {
                    "$ref": "#/definitions/AggregationType"
                },
                "category_id": {
                    "type": "integer"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Condition"
                    }
                },
                "extra": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "number_field": {
                    "$ref": "#/definitions/NumberField"
                },
                "objective_type": {
                    "$ref": "#/definitions/ObjectiveType"
                },
                "required_number": {
                    "type": "integer"
                },
                "scoring_preset": {
                    "$ref": "#/definitions/ScoringPreset"
                },
                "scoring_preset_id": {
                    "type": "integer"
                },
                "valid_from": {
                    "type": "string"
                },
                "valid_to": {
                    "type": "string"
                }
            }
        },
        "ObjectiveConditionCreate": {
            "type": "object",
            "required": [
                "field",
                "operator",
                "value"
            ],
            "properties": {
                "field": {
                    "enum": [
                        "BASE_TYPE",
                        "NAME",
                        "TYPE_LINE",
                        "RARITY",
                        "ILVL",
                        "FRAME_TYPE",
                        "TALISMAN_TIER",
                        "ENCHANT_MODS",
                        "EXPLICIT_MODS",
                        "IMPLICIT_MODS",
                        "CRAFTED_MODS",
                        "FRACTURED_MODS",
                        "SIX_LINK"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/ItemField"
                        }
                    ]
                },
                "id": {
                    "type": "integer"
                },
                "operator": {
                    "enum": [
                        "EQ",
                        "NEQ",
                        "GT",
                        "GTE",
                        "LT",
                        "LTE",
                        "IN",
                        "NOT_IN",
                        "MATCHES",
                        "CONTAINS",
                        "CONTAINS_ALL",
                        "CONTAINS_MATCH",
                        "CONTAINS_ALL_MATCHES"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/Operator"
                        }
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ObjectiveCreate": {
            "type": "object",
            "required": [
                "aggregation",
                "category_id",
                "conditions",
                "name",
                "number_field",
                "objective_type",
                "required_number"
            ],
            "properties": {
                "aggregation": {
                    "$ref": "#/definitions/AggregationType"
                },
                "category_id": {
                    "type": "integer"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectiveConditionCreate"
                    }
                },
                "extra": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "number_field": {
                    "$ref": "#/definitions/NumberField"
                },
                "objective_type": {
                    "$ref": "#/definitions/ObjectiveType"
                },
                "required_number": {
                    "type": "integer"
                },
                "scoring_preset_id": {
                    "type": "integer"
                },
                "valid_from": {
                    "type": "string"
                },
                "valid_to": {
                    "type": "string"
                }
            }
        },
        "Score": {
            "type": "object",
            "required": [
                "finished",
                "number",
                "points",
                "rank",
                "timestamp",
                "user_id"
            ],
            "properties": {
                "finished": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer"
                },
                "points": {
                    "type": "integer"
                },
                "rank": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "ScoreDiff": {
            "type": "object",
            "required": [
                "diff_type",
                "field_diff",
                "score"
            ],
            "properties": {
                "diff_type": {
                    "$ref": "#/definitions/Difftype"
                },
                "field_diff": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "score": {
                    "$ref": "#/definitions/Score"
                }
            }
        },
        "ScoreMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/ScoreDiff"
            }
        },
        "ScoringPreset": {
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "points",
                "scoring_method",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "scoring_method": {
                    "$ref": "#/definitions/ScoringMethod"
                },
                "type": {
                    "$ref": "#/definitions/ScoringPresetType"
                }
            }
        },
        "ScoringPresetCreate": {
            "type": "object",
            "required": [
                "event_id",
                "name",
                "points",
                "scoring_method",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "event_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "scoring_method": {
                    "$ref": "#/definitions/ScoringMethod"
                },
                "type": {
                    "$ref": "#/definitions/ScoringPresetType"
                }
            }
        },
        "Signup": {
            "type": "object",
            "required": [
                "expected_playtime",
                "id",
                "timestamp",
                "user"
            ],
            "properties": {
                "expected_playtime": {
                    "$ref": "#/definitions/ExpectedPlayTime"
                },
                "id": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/NonSensitiveUser"
                }
            }
        },
        "SignupCreate": {
            "type": "object",
            "required": [
                "expected_playtime"
            ],
            "properties": {
                "expected_playtime": {
                    "$ref": "#/definitions/ExpectedPlayTime"
                }
            }
        },
        "Submission": {
            "type": "object",
            "required": [
                "approval_status",
                "comment",
                "id",
                "number",
                "proof",
                "timestamp"
            ],
            "properties": {
                "approval_status": {
                    "$ref": "#/definitions/ApprovalStatus"
                },
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "number": {
                    "type": "integer"
                },
                "objective": {
                    "$ref": "#/definitions/Objective"
                },
                "proof": {
                    "type": "string"
                },
                "review_comment": {
                    "type": "string"
                },
                "reviewer_id": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/NonSensitiveUser"
                }
            }
        },
        "SubmissionCreate": {
            "type": "object",
            "required": [
                "objective_id",
                "timestamp"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "number": {
                    "type": "integer"
                },
                "objective_id": {
                    "type": "integer"
                },
                "proof": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "SubmissionReview": {
            "type": "object",
            "required": [
                "approval_status"
            ],
            "properties": {
                "approval_status": {
                    "enum": [
                        "APPROVED",
                        "PENDING",
                        "REJECTED"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApprovalStatus"
                        }
                    ]
                },
                "review_comment": {
                    "type": "string"
                }
            }
        },
        "Team": {
            "type": "object",
            "required": [
                "allowed_classes",
                "event_id",
                "id",
                "name"
            ],
            "properties": {
                "allowed_classes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "event_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "TeamCreate": {
            "type": "object",
            "required": [
                "allowed_classes",
                "name"
            ],
            "properties": {
                "allowed_classes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "TeamUserCreate": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "is_team_lead": {
                    "type": "boolean"
                },
                "team_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "User": {
            "type": "object",
            "required": [
                "display_name",
                "id",
                "permissions"
            ],
            "properties": {
                "account_name": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "discord_name": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                },
                "token_expiry_timestamp": {
                    "type": "string"
                },
                "twitch_id": {
                    "type": "string"
                },
                "twitch_name": {
                    "type": "string"
                }
            }
        },
        "UserUpdate": {
            "type": "object",
            "required": [
                "display_name"
            ],
            "properties": {
                "display_name": {
                    "type": "string"
                }
            }
        },
        "AggregationType": {
            "type": "string",
            "enum": [
                "SUM_LATEST",
                "EARLIEST",
                "EARLIEST_FRESH_ITEM",
                "MAXIMUM",
                "MINIMUM"
            ],
            "x-enum-varnames": [
                "SUM_LATEST",
                "EARLIEST",
                "EARLIEST_FRESH_ITEM",
                "MAXIMUM",
                "MINIMUM"
            ]
        },
        "ApprovalStatus": {
            "type": "string",
            "enum": [
                "APPROVED",
                "REJECTED",
                "PENDING"
            ],
            "x-enum-varnames": [
                "APPROVED",
                "REJECTED",
                "PENDING"
            ]
        },
        "ExpectedPlayTime": {
            "type": "string",
            "enum": [
                "VERY_LOW",
                "LOW",
                "MEDIUM",
                "HIGH",
                "VERY_HIGH",
                "EXTREME",
                "NO_LIFE"
            ],
            "x-enum-varnames": [
                "VeryLow",
                "Low",
                "Medium",
                "High",
                "VeryHigh",
                "Extreme",
                "NoLife"
            ]
        },
        "FieldType": {
            "type": "string",
            "enum": [
                "string",
                "int",
                "bool",
                "string[]"
            ],
            "x-enum-varnames": [
                "String",
                "Int",
                "Bool",
                "StringArray"
            ]
        },
        "GameVersion": {
            "type": "string",
            "enum": [
                "poe1",
                "poe2"
            ],
            "x-enum-varnames": [
                "PoE1",
                "PoE2"
            ]
        },
        "ItemField": {
            "type": "string",
            "enum": [
                "BASE_TYPE",
                "NAME",
                "TYPE_LINE",
                "QUALITY",
                "LEVEL",
                "RARITY",
                "ILVL",
                "FRAME_TYPE",
                "TALISMAN_TIER",
                "ENCHANT_MODS",
                "EXPLICIT_MODS",
                "IMPLICIT_MODS",
                "CRAFTED_MODS",
                "FRACTURED_MODS",
                "MAX_LINKS",
                "SOCKETS",
                "INCUBATOR_KILLS",
                "IS_CORRUPTED",
                "IS_VAAL",
                "SANCTUM_AFFLICTIONS",
                "TEMPLE_ROOMS",
                "RITUAL_VESSEL_BOSSES",
                "RITUAL_VESSEL_MAP"
            ],
            "x-enum-comments": {
                "SOCKETS": "as string like \"RGGB\""
            },
            "x-enum-varnames": [
                "BASE_TYPE",
                "NAME",
                "TYPE_LINE",
                "QUALITY",
                "LEVEL",
                "RARITY",
                "ILVL",
                "FRAME_TYPE",
                "TALISMAN_TIER",
                "ENCHANTS",
                "EXPLICITS",
                "IMPLICITS",
                "CRAFTED_MODS",
                "FRACTURED_MODS",
                "MAX_LINKS",
                "SOCKETS",
                "INCUBATOR_KILLS",
                "IS_CORRUPTED",
                "IS_VAAL",
                "SANCTUM_MODS",
                "TEMPLE_ROOMS",
                "RITUAL_BOSSES",
                "RITUAL_MAP"
            ]
        },
        "JobType": {
            "type": "string",
            "enum": [
                "FetchStashChanges",
                "EvaluateStashChanges",
                "FetchCharacterData"
            ],
            "x-enum-varnames": [
                "FetchStashChanges",
                "EvaluateStashChanges",
                "FetchCharacterData"
            ]
        },
        "NumberField": {
            "type": "string",
            "enum": [
                "STACK_SIZE",
                "PLAYER_LEVEL",
                "DELVE_DEPTH",
                "PANTHEON",
                "ASCENDANCY",
                "PLAYER_SCORE",
                "SUBMISSION_VALUE"
            ],
            "x-enum-varnames": [
                "STACK_SIZE",
                "PLAYER_LEVEL",
                "DELVE_DEPTH",
                "PANTHEON",
                "ASCENDANCY",
                "PLAYER_SCORE",
                "SUBMISSION_VALUE"
            ]
        },
        "ObjectiveType": {
            "type": "string",
            "enum": [
                "ITEM",
                "PLAYER",
                "SUBMISSION"
            ],
            "x-enum-varnames": [
                "ITEM",
                "PLAYER",
                "SUBMISSION"
            ]
        },
        "Operator": {
            "type": "string",
            "enum": [
                "EQ",
                "NEQ",
                "GT",
                "LT",
                "IN",
                "NOT_IN",
                "MATCHES",
                "CONTAINS",
                "CONTAINS_MATCH",
                "LENGTH_EQ",
                "LENGTH_GT",
                "LENGTH_LT"
            ],
            "x-enum-varnames": [
                "EQ",
                "NEQ",
                "GT",
                "LT",
                "IN",
                "NOT_IN",
                "MATCHES",
                "CONTAINS",
                "CONTAINS_MATCH",
                "LENGTH_EQ",
                "LENGTH_GT",
                "LENGTH_LT"
            ]
        },
        "Permission": {
            "type": "string",
            "enum": [
                "admin",
                "command_team"
            ],
            "x-enum-varnames": [
                "PermissionAdmin",
                "PermissionCommandTeam"
            ]
        },
        "ScoringMethod": {
            "type": "string",
            "enum": [
                "PRESENCE",
                "POINTS_FROM_VALUE",
                "RANKED_TIME",
                "RANKED_VALUE",
                "RANKED_REVERSE",
                "RANKED_COMPLETION_TIME",
                "BONUS_PER_COMPLETION"
            ],
            "x-enum-varnames": [
                "PRESENCE",
                "POINTS_FROM_VALUE",
                "RANKED_TIME",
                "RANKED_VALUE",
                "RANKED_REVERSE",
                "RANKED_COMPLETION",
                "BONUS_PER_COMPLETION"
            ]
        },
        "ScoringPresetType": {
            "type": "string",
            "enum": [
                "OBJECTIVE",
                "CATEGORY"
            ],
            "x-enum-varnames": [
                "OBJECTIVE",
                "CATEGORY"
            ]
        },
        "Difftype": {
            "type": "string",
            "enum": [
                "Added",
                "Removed",
                "Changed",
                "Unchanged"
            ],
            "x-enum-varnames": [
                "Added",
                "Removed",
                "Changed",
                "Unchanged"
            ]
        },
        "RecurringJob": {
            "type": "object",
            "required": [
                "end_date",
                "event_id",
                "job_type",
                "sleep_after_each_run_seconds"
            ],
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "event_id": {
                    "type": "integer"
                },
                "job_type": {
                    "$ref": "#/definitions/JobType"
                },
                "sleep_after_each_run_seconds": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}